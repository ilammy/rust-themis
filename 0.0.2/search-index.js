var N = null;var searchIndex = {};
searchIndex["themis"]={"doc":"Themis Library","items":[[3,"Error","themis","The error type for most Themis operations.",N,N],[4,"ErrorKind","","A list of Themis error categories.",N,N],[13,"Fail","","General failure.",0,N],[13,"InvalidParameter","","Some input parameter has incorrect value.",0,N],[13,"NoMemory","","Could not allocate memory.",0,N],[13,"BufferTooSmall","","The provided buffer is too small to fit the result.",0,N],[13,"DataCorrupt","","Input data is corrupted.",0,N],[13,"InvalidSignature","","Input data contains invalid signature.",0,N],[13,"NotSupported","","Operation not supported.",0,N],[13,"SessionKeyAgreementNotFinished","","Attempt to use Secure Session before completing key exchange.",0,N],[13,"SessionTransportError","","Transport layer returned error.",0,N],[13,"SessionGetPublicKeyForIdError","","Could not retrieve a public key corresponding to peer ID.",0,N],[13,"CompareNotReady","","Attempt to use Secure Comparator before completing nonce exchange.",0,N],[0,"keygen","","Generating key material.",N,N],[5,"gen_rsa_key_pair","themis::keygen","Generates a pair of RSA keys.",N,[[],["rsakeypair"]]],[5,"gen_ec_key_pair","","Generates a pair of ECDSA keys.",N,[[],["ecdsakeypair"]]],[0,"keys","themis","Cryptographic keys.",N,N],[3,"RsaSecretKey","themis::keys","RSA secret key.",N,N],[3,"RsaPublicKey","","RSA public key.",N,N],[3,"RsaKeyPair","","RSA key pair.",N,N],[3,"EcdsaSecretKey","","ECDSA secret key.",N,N],[3,"EcdsaPublicKey","","ECDSA public key.",N,N],[3,"EcdsaKeyPair","","ECDSA key pair.",N,N],[3,"SecretKey","","A secret key.",N,N],[3,"PublicKey","","A public key.",N,N],[3,"KeyPair","","A pair of asymmetric keys.",N,N],[4,"KeyKind","","Kind of an asymmetric key.",N,N],[13,"RsaSecret","","RSA secret key.",1,N],[13,"RsaPublic","","RSA public key.",1,N],[13,"EcdsaSecret","","ECDSA secret key.",1,N],[13,"EcdsaPublic","","ECDSA public key.",1,N],[11,"clone","","",2,[[["self"]],["rsasecretkey"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["rsasecretkey"]],["bool"]]],[11,"ne","","",2,[[["self"],["rsasecretkey"]],["bool"]]],[11,"hash","","",2,N],[11,"clone","","",3,[[["self"]],["rsapublickey"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["rsapublickey"]],["bool"]]],[11,"ne","","",3,[[["self"],["rsapublickey"]],["bool"]]],[11,"hash","","",3,N],[11,"clone","","",4,[[["self"]],["rsakeypair"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",4,[[["self"],["rsakeypair"]],["bool"]]],[11,"ne","","",4,[[["self"],["rsakeypair"]],["bool"]]],[11,"hash","","",4,N],[11,"clone","","",5,[[["self"]],["ecdsasecretkey"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"eq","","",5,[[["self"],["ecdsasecretkey"]],["bool"]]],[11,"ne","","",5,[[["self"],["ecdsasecretkey"]],["bool"]]],[11,"hash","","",5,N],[11,"clone","","",6,[[["self"]],["ecdsapublickey"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"eq","","",6,[[["self"],["ecdsapublickey"]],["bool"]]],[11,"ne","","",6,[[["self"],["ecdsapublickey"]],["bool"]]],[11,"hash","","",6,N],[11,"clone","","",7,[[["self"]],["ecdsakeypair"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"eq","","",7,[[["self"],["ecdsakeypair"]],["bool"]]],[11,"ne","","",7,[[["self"],["ecdsakeypair"]],["bool"]]],[11,"hash","","",7,N],[11,"clone","","",8,[[["self"]],["secretkey"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",8,[[["self"],["secretkey"]],["bool"]]],[11,"ne","","",8,[[["self"],["secretkey"]],["bool"]]],[11,"hash","","",8,N],[11,"clone","","",9,[[["self"]],["publickey"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"eq","","",9,[[["self"],["publickey"]],["bool"]]],[11,"ne","","",9,[[["self"],["publickey"]],["bool"]]],[11,"hash","","",9,N],[11,"clone","","",10,[[["self"]],["keypair"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"eq","","",10,[[["self"],["keypair"]],["bool"]]],[11,"ne","","",10,[[["self"],["keypair"]],["bool"]]],[11,"hash","","",10,N],[11,"clone","","",1,[[["self"]],["keykind"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["keykind"]],["bool"]]],[11,"split","","Splits this key pair into secret and public keys.",4,N],[11,"join","","Joins a pair of secret and public keys.",4,[[["rsasecretkey"],["rsapublickey"]],["rsakeypair"]]],[11,"split","","Splits this key pair into secret and public keys.",7,N],[11,"join","","Joins a pair of secret and public keys.",7,[[["ecdsasecretkey"],["ecdsapublickey"]],["ecdsakeypair"]]],[11,"split","","Splits this key pair into secret and public keys.",10,N],[11,"try_join","","Joins a pair of secret and public keys.",10,[[["s"],["p"]],["result",["keypair"]]]],[11,"try_from_slice","","Parses a key from a byte slice.",2,[[["t"]],["result"]]],[11,"try_from_slice","","Parses a key from a byte slice.",3,[[["t"]],["result"]]],[11,"try_from_slice","","Parses a key from a byte slice.",5,[[["t"]],["result"]]],[11,"try_from_slice","","Parses a key from a byte slice.",6,[[["t"]],["result"]]],[11,"kind","","Retrieves actual kind of the stored key.",8,[[["self"]],["keykind"]]],[11,"try_from_slice","","Parses a key from a byte slice.",8,[[["t"]],["result"]]],[11,"kind","","Retrieves actual kind of the stored key.",9,[[["self"]],["keykind"]]],[11,"try_from_slice","","Parses a key from a byte slice.",9,[[["t"]],["result"]]],[11,"as_ref","","",2,N],[11,"as_ref","","",3,N],[11,"as_ref","","",5,N],[11,"as_ref","","",6,N],[11,"as_ref","","",8,N],[11,"as_ref","","",9,N],[11,"from","","",8,[[["rsasecretkey"]],["secretkey"]]],[11,"from","","",9,[[["rsapublickey"]],["publickey"]]],[11,"from","","",8,[[["ecdsasecretkey"]],["secretkey"]]],[11,"from","","",9,[[["ecdsapublickey"]],["publickey"]]],[11,"from","","",10,[[["rsakeypair"]],["keypair"]]],[11,"from","","",10,[[["ecdsakeypair"]],["keypair"]]],[0,"secure_cell","themis","Secure Cell service.",N,N],[3,"SecureCell","themis::secure_cell","Basic Secure Cell.",N,N],[3,"SecureCellSeal","","Secure Cell in a sealing operation mode.",N,N],[3,"SecureCellTokenProtect","","Secure Cell in a token protect operation mode.",N,N],[3,"SecureCellContextImprint","","Secure Cell in a context imprint operation mode.",N,N],[11,"with_key","","Constructs a new cell secured by a master key.",11,[[["k"]],["self"]]],[11,"with_key_and_context","","Constructs a new cell secured by a master key and arbitrary user data.",11,[[["k"],["c"]],["self"]]],[11,"seal","","Switches this Secure Cell to the sealing operation mode.",11,[[["self"]],["securecellseal"]]],[11,"token_protect","","Switches this Secure Cell to the token protect operation mode.",11,[[["self"]],["securecelltokenprotect"]]],[11,"context_imprint","","Switches this Secure Cell to the context imprint operation mode.",11,[[["self"]],["securecellcontextimprint"]]],[11,"encrypt","","Encrypts and puts the provided message into a sealed cell.",12,[[["self"],["m"]],["result",["vec"]]]],[11,"decrypt","","Extracts the original message from a sealed cell.",12,[[["self"],["m"]],["result",["vec"]]]],[11,"encrypt","","Encrypts the provided message and returns the ciphertext with authentication token.",13,[[["self"],["m"]],["result"]]],[11,"decrypt","","Decrypts the ciphertext then validates and returns the original message.",13,[[["self"],["m"],["t"]],["result",["vec"]]]],[11,"encrypt","","Encrypts the provided message and returns the ciphertext.",14,[[["self"],["m"]],["result",["vec"]]]],[11,"decrypt","","Decrypts the ciphertext and returns the original message.",14,[[["self"],["m"]],["result",["vec"]]]],[0,"secure_comparator","themis","Secure Comparator service.",N,N],[3,"SecureComparator","themis::secure_comparator","Secure Comparison context.",N,N],[11,"new","","Prepares for a new comparison.",15,[[],["self"]]],[11,"append_secret","","Collects the data to be compared.",15,[[["self"],["s"]],["result"]]],[11,"begin_compare","","Starts comparison on the client returning the first message.",15,[[["self"]],["result",["vec"]]]],[11,"proceed_compare","","Continues comparison process with given message.",15,[[["self"],["d"]],["result",["vec"]]]],[11,"get_result","","Returns the result of comparison.",15,[[["self"]],["result",["bool"]]]],[11,"is_complete","","Checks if this comparison is complete.",15,[[["self"]],["bool"]]],[11,"default","","",15,[[],["self"]]],[0,"secure_message","themis","Secure Message service.",N,N],[3,"SecureMessage","themis::secure_message","Secure Message encryption.",N,N],[3,"SecureSign","","Secure Message signing.",N,N],[3,"SecureVerify","","Secure Message verification.",N,N],[11,"clone","","",16,[[["self"]],["securemessage"]]],[11,"new","","Makes a new Secure Message using given key pair.",16,[[["k"]],["self"]]],[11,"wrap","","Wraps the provided message into a secure encrypted message.",16,[[["self"],["m"]],["result",["vec"]]]],[11,"unwrap","","Unwraps an encrypted message back into its original form.",16,[[["self"],["m"]],["result",["vec"]]]],[11,"clone","","",17,[[["self"]],["securesign"]]],[11,"new","","Makes a new Secure Message using given secret key.",17,[[["s"]],["self"]]],[11,"sign","","Securely signs a message and returns it with signature attached.",17,[[["self"],["m"]],["result",["vec"]]]],[11,"clone","","",18,[[["self"]],["secureverify"]]],[11,"new","","Makes a new Secure Message using given public key.",18,[[["p"]],["self"]]],[11,"verify","","Verifies a signature and returns the original message.",18,[[["self"],["m"]],["result",["vec"]]]],[0,"secure_session","themis","Secure Session service.",N,N],[3,"SecureSession","themis::secure_session","Secure Session context.",N,N],[4,"SecureSessionState","","State of Secure Session connection.",N,N],[13,"Idle","","Newly created sessions start in this state.",19,N],[13,"Negotiating","","Connection establishment in progress.",19,N],[13,"Established","","Connection has been established, data exchange may commence.",19,N],[8,"SecureSessionTransport","","Transport delegate for Secure Session.",N,N],[11,"send_data","","Send the provided data to the peer, return the number of bytes transferred.",20,N],[11,"receive_data","","Receive some data from the peer into the provided buffer, return the number of bytes.",20,N],[11,"state_changed","","Notification about connection state of Secure Session.",20,[[["self"],["securesessionstate"]]]],[10,"get_public_key_for_id","","Get a public key corresponding to a peer ID.",20,N],[11,"eq","","",19,[[["self"],["securesessionstate"]],["bool"]]],[11,"with_transport","","Creates a new Secure Session.",21,[[["i"],["ecdsasecretkey"],["t"]],["result"]]],[11,"is_established","","Returns `true` if this Secure Session may be used for data transfer.",21,[[["self"]],["bool"]]],[11,"get_remote_id","","Returns ID of the remote peer.",21,[[["self"]],["result",["vec"]]]],[11,"connect","","Initiates connection to the remote peer.",21,[[["self"]],["result"]]],[11,"generate_connect_request","","Initiates connection to the remote peer, returns connection message.",21,[[["self"]],["result",["vec"]]]],[11,"wrap","","Wraps a message and returns it.",21,[[["self"],["m"]],["result",["vec"]]]],[11,"unwrap","","Unwraps a message and returns it.",21,[[["self"],["m"]],["result",["vec"]]]],[11,"negotiate","","Continues connection negotiation with given message.",21,[[["self"],["m"]],["result",["vec"]]]],[11,"send","","Sends a message to the remote peer.",21,[[["self"],["m"]],["result"]]],[11,"receive","","Receives a message from the remote peer.",21,[[["self"],["usize"]],["result",["vec"]]]],[11,"negotiate_transport","","Continues connection negotiation.",21,[[["self"]],["result"]]],[11,"fmt","themis","",22,[[["self"],["formatter"]],["result"]]],[11,"clone","","",22,[[["self"]],["error"]]],[11,"eq","","",22,[[["self"],["error"]],["bool"]]],[11,"ne","","",22,[[["self"],["error"]],["bool"]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",22,[[["self"]],["errorkind"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"ne","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[6,"Result","","Result type for most Themis operations.",N,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"from","themis::keys","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"from","themis::secure_cell","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"from","themis::secure_comparator","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"from","themis::secure_message","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"from","themis::secure_session","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]]],"paths":[[4,"ErrorKind"],[4,"KeyKind"],[3,"RsaSecretKey"],[3,"RsaPublicKey"],[3,"RsaKeyPair"],[3,"EcdsaSecretKey"],[3,"EcdsaPublicKey"],[3,"EcdsaKeyPair"],[3,"SecretKey"],[3,"PublicKey"],[3,"KeyPair"],[3,"SecureCell"],[3,"SecureCellSeal"],[3,"SecureCellTokenProtect"],[3,"SecureCellContextImprint"],[3,"SecureComparator"],[3,"SecureMessage"],[3,"SecureSign"],[3,"SecureVerify"],[4,"SecureSessionState"],[8,"SecureSessionTransport"],[3,"SecureSession"],[3,"Error"]]};
initSearch(searchIndex);
